<Window x:Class="Comida.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Comida"
        xmlns:convertidores="clr-namespace:Comida.Convertidores"
        mc:Ignorable="d"
        Background="#FF90B6FB"
        Title="MainWindow" Height="700" Width="975" MinHeight="500" MinWidth="700" Icon="/Recursos/fruit_food_apple.ico">
    <Window.Resources>
        <convertidores:ConverterFuente x:Key="converterFuente"/>

        <ControlTemplate x:Key="textbox" TargetType="{x:Type TextBox}">
            <Border x:Name="border" CornerRadius="5" Padding="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect ShadowDepth="0"  Color="#FF569DE5" BlurRadius="15"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="TextBox">
            <Setter Property="Template" Value="{DynamicResource textbox}"/>
        </Style>

        <ControlTemplate x:Key="GroupBoxControlTemplate" TargetType="{x:Type GroupBox}">
            <Grid SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="6"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="6"/>
                </Grid.RowDefinitions>
                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0"  Grid.Row="1" Grid.RowSpan="3"/>
                <Border BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4"  Grid.Row="1" Grid.RowSpan="3">
                    <Border.OpacityMask>
                        <MultiBinding ConverterParameter="7" UpdateSourceTrigger="Default">
                            <MultiBinding.Converter>
                                <BorderGapMaskConverter/>
                            </MultiBinding.Converter>
                            <Binding ElementName="Header" Path="ActualWidth"/>
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding>
                    </Border.OpacityMask>

                </Border>
                <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ContentPresenter Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </ControlTemplate>
        <Style TargetType="GroupBox">
            <Setter Property="Template" Value="{DynamicResource GroupBoxControlTemplate}"/>
        </Style>


        <ControlTemplate x:Key="CheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" CornerRadius="3" Padding="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid">
                        <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="#FF5593FF" Margin="1" Opacity="0" Stretch="None"/>
                        <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF5593FF"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF5593FF"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="CheckBox">
            <Setter Property="Template" Value="{DynamicResource CheckBoxControlTemplate}"/>
        </Style>

        <ControlTemplate x:Key="ButtonControlTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="lightGreen"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="Button">
            <Setter Property="Template" Value="{DynamicResource ButtonControlTemplate}"/>
        </Style>


        <Style TargetType="Image" x:Key="bottomImages">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="25"/>
        </Style>

        <Style TargetType="StackPanel" x:Key="Habilitado">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="DockPanel.Dock" Value="Right"/>
            <Setter Property="Background" Value="#FFD4D4D4"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PlatoSeleccionado}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="StackPanel" x:Key="stackPanel">
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style TargetType="Image" x:Key="bandera" BasedOn="{StaticResource bottomImages}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="Americana">
                    <Setter Property="Source" Value="/Recursos/Paises/united_states.png"/>
                    <Setter Property="ToolTip" Value="Comida americana"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="China">
                    <Setter Property="Source" Value="/Recursos/Paises/china.png"/>
                    <Setter Property="ToolTip" Value="Comida china"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="Mexicana">
                    <Setter Property="Source" Value="/Recursos/Paises/mexico.png"/>
                    <Setter Property="ToolTip" Value="Comida mexicana"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Image" x:Key="alergenos" BasedOn="{StaticResource bottomImages}">
            <Setter Property="Visibility" Value="Collapsed"/>
        </Style>

        <Style TargetType="Image" x:Key="Gluten" BasedOn="{StaticResource alergenos}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Gluten}" Value="true">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="ToolTip" Value="Gluten"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Image" x:Key="Soja" BasedOn="{StaticResource alergenos}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Soja}" Value="true">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="ToolTip" Value="Soja"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Image" x:Key="Leche" BasedOn="{StaticResource alergenos}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Leche}" Value="true">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="ToolTip" Value="Leche"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Image" x:Key="Sulfitos" BasedOn="{StaticResource alergenos}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Sulfitos}" Value="true">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="ToolTip" Value="Sulfitos"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Border Margin="10"  Background="White" BorderThickness="1" BorderBrush="Black">
        <DockPanel>
            <StackPanel Style="{StaticResource Habilitado}">
                <StackPanel Style="{StaticResource stackPanel}">
                    <TextBlock>Nombre del plato</TextBlock>
                    <TextBox Text="{Binding Path=PlatoSeleccionado.Nombre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>

                <StackPanel Style="{StaticResource stackPanel}">
                    <TextBlock>Foto del plato</TextBlock>
                    <TextBox Text="{Binding Path=PlatoSeleccionado.Imagen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>

                <StackPanel Style="{StaticResource stackPanel}">
                    <TextBlock>Tipo de comida</TextBlock>
                    <ComboBox ItemsSource="{Binding Path=Tipos}" SelectedItem="{Binding Path=PlatoSeleccionado.Tipo}">
                    </ComboBox>
                </StackPanel>

                <DockPanel Margin="5">
                    <GroupBox Header="Alérgenos">
                        <UniformGrid Rows="2" Columns="2">
                            <CheckBox Margin="5" IsChecked="{Binding Path=PlatoSeleccionado.Leche}">Leche</CheckBox>
                            <CheckBox Margin="5" IsChecked="{Binding Path=PlatoSeleccionado.Gluten}">Gluten</CheckBox>
                            <CheckBox Margin="5" IsChecked="{Binding Path=PlatoSeleccionado.Soja}">Soja</CheckBox>
                            <CheckBox Margin="5" IsChecked="{Binding Path=PlatoSeleccionado.Sulfitos}">Sulfitos</CheckBox>
                        </UniformGrid>
                    </GroupBox>
                </DockPanel>

                <Button Content="Limpiar selección" Width="100" Click="LimpiaSeleccionButton_Click" HorizontalAlignment="Left" Margin="5"></Button>
                
            </StackPanel>
            <Border BorderThickness="1" BorderBrush="Gray" Margin="10">
                <ListBox ItemsSource="{Binding Path=Platos}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedItem="{Binding Path=PlatoSeleccionado}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Width="250" Height="300" Margin="10" Background="AliceBlue">
                                <Border.Effect>
                                    <DropShadowEffect/>
                                </Border.Effect>
                                <DockPanel Margin="10">
                                    <Viewbox DockPanel.Dock="Top" Height="50">
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{Binding Path=Tipo, Converter={StaticResource converterFuente}}" Text="{Binding Path=Nombre}"/>
                                    </Viewbox>
                                    <DockPanel DockPanel.Dock="Bottom" LastChildFill="False" Margin="0,10,0,0">
                                        <Image Style="{StaticResource bandera}"/>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Right" >
                                            <Image Source="/Recursos/Alergenos/gluten.png" Style="{StaticResource Gluten}"/>
                                            <Image Source="/Recursos/Alergenos/milk.png" Style="{StaticResource Leche}"/>
                                            <Image Source="/Recursos/Alergenos/soybean.png" Style="{StaticResource Soja}"/>
                                            <Image Source="/Recursos/Alergenos/sulfide.png" Style="{StaticResource Sulfitos}"/>
                                        </DockPanel>
                                    </DockPanel>
                                    <Image Source="{Binding Path=Imagen}" Stretch="UniformToFill"/>
                                </DockPanel>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Border>
        </DockPanel>
    </Border>
</Window>
